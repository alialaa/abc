name: ENV Variables
# on: push
on: pull_request
env:
  WF_ENV: Available to all jobs

jobs:
  decrypt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: ls
        run: ls -al
      - name: Decrypt file
        run: gpg --quiet --batch --yes --decrypt --passphrase="$PASSPHRASE" --output $HOME/secret.json secret.json.gpg
        env:
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
      - name: Print our file content
        run: cat $HOME/secret.json

  create-issues:
    runs-on: ubuntu-latest
    steps:
      - name: Push a random file
        run: |
          pwd
          ls -a
          git init
          git remote add origin "https://$GITHUB_ACTOR:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY.git"
          git config --global user.email "makoto_honda_ab@mail.toyota.co.jp"
          git config --global user.name "makoto-honda-ab"
          git fetch
          git checkout main
          git branch --set-upstream-to=origin/main
          git pull
          ls -a
          echo $RANDOM >> random.txt
          ls -a
          git add -A
          git commit -m "Random file"
          git push

      - name: Create issue using REST API
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Automated issue for commit: ${{ github.sha }}",
            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_."
            }' \
          --fail

  log-env:
    runs-on: ubuntu-latest
    env:
      JOB_ENV: Available to all steps in log-env job
    steps:

      - name: Log ENV Variables
        env:
          STEP_ENV: Available to only this step
        run: |
          echo "WF_ENV: ${WF_ENV}"
          echo "JOB_ENV: ${JOB_ENV}"
          echo "STEP_ENV: ${STEP_ENV}"
# WF_ENV: Available to all jobs
# JOB_ENV: Available to all steps in log-env job
# STEP_ENV: Available to only this step

      - name: Log ENV 2
        run: |
          echo "WF_ENV: ${WF_ENV}"
          echo "JOB_ENV: ${JOB_ENV}"
          echo "STEP_ENV: ${STEP_ENV}"
# WF_ENV: Available to all jobs
# JOB_ENV: Available to all steps in log-env job
# STEP_ENV: 

  log-default-env:
    runs-on: ubuntu-latest
    steps:
      - name: Default ENV Variables
        run: |
          echo "secrets.GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
          echo "HOME: ${HOME}"
          echo "GITHUB_WORKFLOW: ${GITHUB_WORKFLOW}"
          echo "GITHUB_ACTION: ${GITHUB_ACTION}"
          echo "GITHUB_ACTIONS: ${GITHUB_ACTIONS}"
          echo "GITHUB_ACTOR: ${GITHUB_ACTOR}"
          echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}"
          echo "GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}"
          echo "GITHUB_WORKSPACE: ${GITHUB_WORKSPACE}"
          echo "GITHUB_SHA: ${GITHUB_SHA}"
          echo "GITHUB_REF: ${GITHUB_REF}"
          echo "WF_ENV: ${WF_ENV}"
          echo "JOB_ENV: ${JOB_ENV}"
          echo "STEP_ENV: ${STEP_ENV}"

# secrets.GITHUB_TOKEN: ***
# HOME: /home/runner
# GITHUB_WORKFLOW: ENV Variables
# GITHUB_ACTION: run
# GITHUB_ACTIONS: true
# GITHUB_ACTOR: makoto-honda-ab
# GITHUB_REPOSITORY: makoto-honda-ab/abc
# GITHUB_EVENT_NAME: push
# GITHUB_WORKSPACE: /home/runner/work/abc/abc
# GITHUB_SHA: 8d1bd2b23ca9a4c080201608fa5b8a3da13f4635
# GITHUB_REF: refs/heads/main
# WF_ENV: Available to all jobs
# JOB_ENV: 
# STEP_ENV: 